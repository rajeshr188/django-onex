# Generated by Django 4.2.3 on 2023-07-23 10:51

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("product", "0001_initial"),
        ("purchase", "0001_initial"),
        ("contact", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="stocklot",
            name="purchase_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="item_lots",
                to="purchase.invoiceitem",
            ),
        ),
        migrations.AddField(
            model_name="stocklot",
            name="stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lots",
                to="product.stock",
            ),
        ),
        migrations.AddField(
            model_name="stocklot",
            name="variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_lots",
                to="product.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stocks",
                to="product.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="rate",
            name="rate_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="product.ratesource"
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="images",
            field=models.ManyToManyField(
                through="product.VariantImage", to="product.productimage"
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="variants",
                to="product.product",
            ),
        ),
        migrations.AddField(
            model_name="producttype",
            name="product_attributes",
            field=models.ManyToManyField(
                blank=True, related_name="product_types", to="product.attribute"
            ),
        ),
        migrations.AddField(
            model_name="producttype",
            name="variant_attributes",
            field=models.ManyToManyField(
                blank=True, related_name="product_variant_types", to="product.attribute"
            ),
        ),
        migrations.AddField(
            model_name="productimage",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="product.product",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="product.category",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="product.producttype",
            ),
        ),
        migrations.AddField(
            model_name="pricingtierproductprice",
            name="pricing_tier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="price_list",
                to="product.pricingtier",
            ),
        ),
        migrations.AddField(
            model_name="pricingtierproductprice",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="product.productvariant"
            ),
        ),
        migrations.AddField(
            model_name="pricingtier",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="product.pricingtier",
            ),
        ),
        migrations.AddField(
            model_name="price",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prices",
                to="contact.customer",
            ),
        ),
        migrations.AddField(
            model_name="price",
            name="price_tier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="product.pricingtier"
            ),
        ),
        migrations.AddField(
            model_name="price",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="product.productvariant"
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="product.category",
            ),
        ),
        migrations.AddField(
            model_name="attributevalue",
            name="attribute",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="product.attribute",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rate",
            unique_together={("metal", "currency", "timestamp", "purity")},
        ),
        migrations.AlterUniqueTogether(
            name="attributevalue",
            unique_together={("name", "attribute")},
        ),
    ]
